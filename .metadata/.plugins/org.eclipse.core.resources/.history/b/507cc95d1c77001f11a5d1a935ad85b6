<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<div th:replace="~{layouts/header}"></div>

<style>
/* 기존 스타일 그대로 유지 */
.container1 {
	max-width: 1200px;
	margin: 80px auto;
}

.category {
	display: flex;
	gap: 15px;
	margin-bottom: 20px;
}

.category button {
	padding: 10px 20px;
	background-color: #f0f0f0;
	border: 1px solid #ccc;
	border-radius: 20px;
	cursor: pointer;
}

.category button:hover {
	background-color: #0056b3;
	color: #fff;
}

.category button.active {
	background-color: #0056b3;
	color: #fff;
}

.market-grid {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	gap: 20px;
}

.market-card {
	background-color: #fff;
	border-radius: 10px;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	padding: 15px;
	text-align: center;
}

.market-card img {
	width: 100%;
	border-radius: 10px;
}

.market-info {
	margin-top: 10px;
}

.market-title {
	font-size: 18px;
	font-weight: bold;
	color: #333;
}

.market-jjim {
	color: #ff4500;
	font-size: 16px;
	font-weight: bold;
}

.heart {
	width: 30px;
	height: 30px;
	scale: 10px;
	object-fit: cover; /* 이미지를 비율 유지하며 잘라서 맞출 수 있음 */
}

.fixedSize {
	width: 100px;
	height: 100px;
	object-fit: cover; /* 이미지를 비율 유지하며 잘라서 맞출 수 있음 */
	display: block; /* inline-block 요소의 여백 문제 방지 */
}
</style>

<script>
	// 선택한 상품의 Saleid 값을 가진 폼을 제출하는 함수
	function view(saleId) {
		// 폼을 선택하고 제출
		const form = document.getElementById('saleForm');
		form.Saleid.value = saleId; // 폼에 선택한 Saleid를 설정
		form.submit(); // 폼 제출
	}
	
	function Category(fcname){
/*         // 페이지 로드 시 전체 리스트를 표시하기 위해 AJAX 요청
	    $(document).ready(function() {
	        loadAllSales();
	    });

	    function loadAllSales() {
	        // 초기 상태에서 전체 데이터를 로드
	        $.ajax({
	            url: '/main/foodmarket/Category',
	            type: 'POST',
	            data: { categoryId: 'all' }, // 기본적으로 'all'을 전송하여 전체 데이터를 가져옴
	            success: function(response) {
	                $('.market-grid').html(response); // 전체 게시글 HTML로 그리드 업데이트
	            },
	            error: function(error) {
	                console.error("에러 : ", error);
	            }
	        });
	    }
	     */
			alert("fcname : "+fcname);

		// ajax 요청으로 해당 카테 게시글만 불러오기
		$.ajax({
			url:'/main/foodmarket/Category',
			type:'POST',
			data : {categoryId:fcname},
			success :function(response){
                $('.market-grid').html(response);  // 서버로부터 받은 게시글 HTML로 그리드 업데이트
			},
			error:function(error){
                console.error("에러 :", error);

			}
		});
	}
	
</script>

<div class="container1">

	<!-- 카테고리 버튼들 -->
	<div class="category">
		<button th:each="foodcate : ${foodcateList}"
			th:text="${foodcate.FCname}"
			th:onclick="Category([[${foodcate.FCname}]])"></button>
	</div>

	<!-- 상품 그리드 -->
	<form id="saleForm" action="/main/salerinfo" method="post">
		<input type="hidden" name="Saleid" value="">
		<div class="market-grid">
			<!-- 상품 카드들 -->
			<div class="market-card" th:each="saleuser : ${salerList}"
				th:onclick="view([[${saleuser.Saleid}]])">
				<img th:src="@{'/storage/' + ${saleuser.Saleimage}}" alt="상품 이미지"
					class="fixedSize">
				<div class="market-info">
					<p class="market-title" th:text="${saleuser.salestorename}"></p>
					<p class="market-price"
						th:text="'평균 : '+${avgPricesMap[saleuser.Saleid]} + ' 원'"></p>
					<p class="market-jjim">찜수 보여주기</p>
				</div>
			</div>
		</div>
	</form>
</div>

<div th:replace="~{layouts/footer}"></div>
